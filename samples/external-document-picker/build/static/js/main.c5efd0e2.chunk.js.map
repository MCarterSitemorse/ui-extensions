{"version":3,"sources":["App.js","serviceWorker.js","Dialog.js","index.js"],"names":["dataMode","SINGLE","MULTIPLE","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDelete","itemToDelete","items","state","filter","value","id","setState","ui","document","field","setValue","JSON","stringify","openDialog","bind","assertThisInitialized","console","log","extensionConfig","parse","extension","config","application","setInitialState","get","brDocument","mode","getValue","Array","isArray","push","error","_context","t0","message","code","dialogOptions","title","url","size","dialog","open","response","_context2","_this2","react_default","a","createElement","className","List_default","map","p","Chip_default","key","avatar","Avatar_default","src","image","label","onDelete","Button_default","disabled","onClick","React","Component","Boolean","window","location","hostname","match","galleryType","GALLERY","LIST","ExtPickerDialog","onScroll","onOk","urlEndpoint","baseUrl","query","page","pageSize","isLoading","hasMore","selectedItems","clientId","useStyles","makeStyles","theme","grow","flexGrow","search","extDialog","createRef","setInitialSelected","then","fetchItems","_this3","container","current","scrollY","scrollHeight","scrollTop","offset","offsetHeight","newItems","concat","options","item","close","fetch","json","fetched","_this4","_this5","classes","isMultiMode","Dialog_default","fullScreen","AppBar_default","position","color","Toolbar_default","TextField_default","autoFocus","margin","type","fullWidth","onChange","event","changeQuery","target","IconButton_default","SvgIcon_default","fill","d","DialogContent_default","ref","GridList_default","GridListTile_default","alt","GridListTileBar_default","subtitle","description","actionIcon","some","e","Fab_default","aria-label","Delete_default","deleteItem","Add_default","addItem","Fade_default","in","style","zIndex","bottom","right","transitionDelay","unmountOnExit","CircularProgress_default","Typography_default","variant","flex","addEventListener","asyncToGenerator","regenerator_default","mark","_callee","routing","wrap","prev","next","UiExtension","sent","react_router_dom","react_router","path","render","src_Dialog","exact","src_App_0","ReactDOM","getElementById","stop","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c5efd0e2.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Button from \"@material-ui/core/Button/Button\";\nimport Chip from \"@material-ui/core/Chip/Chip\";\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport List from \"@material-ui/core/List/List\";\n\n\nconst dataMode = {\n  SINGLE: 'single',\n  MULTIPLE: 'multiple'\n}\n\nclass App extends React.Component {\n\n  constructor (props) {\n    super(props)\n\n    this.openDialog = this.openDialog.bind(this);\n\n    this.ui = props.ui;\n\n    console.log(this.ui);\n    this.state = {items: []};\n\n    this.extensionConfig = JSON.parse(this.ui.extension.config);\n    this.application = this.extensionConfig.application;\n    if (this.extensionConfig.dataMode === dataMode.SINGLE) {\n      this.dataMode = dataMode.SINGLE;\n    } else {\n      this.dataMode = dataMode.MULTIPLE;\n    }\n  }\n\n  componentDidMount () {\n    this.setInitialState(this.ui);\n  }\n\n  async setInitialState (ui) {\n    try {\n      const brDocument = await ui.document.get();\n      this.mode = brDocument.mode;\n      this.setState({mode: this.mode});\n\n      const value = await ui.document.field.getValue();\n      let items = JSON.parse(value);\n\n      if (this.mode === dataMode.SINGLE && !Array.isArray(items)){\n        items = [];\n        items.push(items)\n      }\n\n      this.setState({items: items});\n    } catch (error) {\n      console.error('Failed to register extension:', error.message);\n      console.error('- error code:', error.code);\n    }\n  }\n\n  handleDelete = itemToDelete => () => {\n    const items = this.state.items.filter(value => value.id !== itemToDelete.id);\n    this.setState({items: items});\n    this.ui.document.field.setValue(JSON.stringify(items));\n  };\n\n  async openDialog () {\n    try {\n      const extensionConfig = JSON.parse(this.ui.extension.config);\n      this.dialogOptions = {\n        title: extensionConfig.title,\n        url: './dialog',\n        size: extensionConfig.size,\n        value: JSON.stringify(this.state.items)\n      };\n\n      const response = await this.ui.dialog.open(this.dialogOptions);\n      if (this.mode === dataMode.SINGLE){\n        const items = [];\n        await this.ui.document.field.setValue(JSON.stringify(items));\n      }else{\n        this.setState({items: response});\n        const items = JSON.stringify(response);\n        await this.ui.document.field.setValue(items);\n      }\n\n    } catch (error) {\n      if (error.code === 'DialogCanceled') {\n        return;\n      }\n      console.error('Error after open dialog: ', error.code, error.message);\n    }\n\n  }\n\n  render () {\n    return <div className=\"App\">\n      <List>\n        {this.state.mode === 'edit' ? this.state.items.map((p, id) =>\n          <Chip key={id}\n                size={'medium'}\n                avatar={<Avatar src={p.image ? p.image : 'default'}></Avatar>}\n                label={p.title}\n                onDelete={this.handleDelete(p)}/>\n        ) : this.state.items.map((p, id) =>\n          <Chip key={id}\n                size={'medium'}\n                avatar={<Avatar src={p.image ? p.image : 'default'}></Avatar>}\n                label={p.title}/>\n        )}\n      </List>\n      <Button disabled={(this.state.mode !== 'edit')} onClick={this.openDialog}>Open Browser</Button>\n    </div>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport Fab from \"@material-ui/core/Fab/Fab\";\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport GridListTile from \"@material-ui/core/GridListTile/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar/GridListTileBar\";\nimport GridList from \"@material-ui/core/GridList/GridList\";\nimport Fade from \"@material-ui/core/Fade/Fade\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport AppBar from \"@material-ui/core/AppBar/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar/Toolbar\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport {makeStyles} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Chip from \"@material-ui/core/Chip/Chip\";\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport SvgIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\n\nconst dataMode = {\n  SINGLE: 'single',\n  MULTIPLE: 'multiple'\n}\n\nconst galleryType = {\n  GALLERY: 'Gallery',\n  LIST: 'List'\n}\n\nclass ExtPickerDialog extends React.Component {\n\n  constructor (props) {\n    super(props)\n\n    this.ui = props.ui;\n\n    this.onScroll = this.onScroll.bind(this);\n    this.onOk = this.onOk.bind(this);\n\n    this.extensionConfig = JSON.parse(this.ui.extension.config);\n    this.application = this.extensionConfig.application;\n    if (this.extensionConfig.dataMode === dataMode.SINGLE) {\n      this.dataMode = dataMode.SINGLE;\n    } else {\n      this.dataMode = dataMode.MULTIPLE;\n    }\n    this.urlEndpoint = this.ui.baseUrl + 'edp/' + this.application;\n    this.state = {\n      items: [],\n      query: this.extensionConfig.query,\n      page: 1,\n      pageSize: this.extensionConfig.pageSize,\n      isLoading: false,\n      hasMore: true,\n      selectedItems: [],\n      open: false,\n      galleryType: galleryType.GALLERY\n    };\n\n    this.clientId = this.extensionConfig.clientId;\n\n    this.useStyles = makeStyles(theme => ({\n      grow: {\n        flexGrow: 1\n      },\n      search: {\n        flexGrow: 1,\n      }\n    }));\n\n    this.extDialog = React.createRef();\n  }\n\n  componentDidMount () {\n    this.setInitialSelected(this.ui)\n      .then(this.fetchItems(this.state.query, this.state.page, this.state.pageSize)\n        .then(items => this.setState({items: items})));\n  }\n\n  onScroll () {\n    const container = this.extDialog.current;\n    const scrollY = container.scrollHeight - container.scrollTop;\n    const height = container.offsetHeight;\n    const offset = height - scrollY;\n\n    if ((offset === 0 || offset === 1) && !this.state.isLoading) {\n      this.fetchItems(this.state.query, this.state.page + 1, this.state.pageSize)\n        .then(newItems => this.state.items.concat(newItems))\n        .then(items => this.setState({items: items, page: this.state.page + 1}));\n    }\n  }\n\n  async setInitialSelected (ui) {\n    try {\n      const options = await ui.dialog.options();\n      const items = JSON.parse(options.value);\n      this.setState({selectedItems: items});\n    } catch (error) {\n      console.error('Failed to register extension:', error.message);\n      console.error('- error code:', error.code);\n    }\n  }\n\n  addItem (item) {\n    if (this.dataMode === dataMode.SINGLE) {\n      const items = [];\n      items.push(item);\n      this.setState({selectedItems: items});\n      this.ui.dialog.close(items);\n    } else {\n      const items = this.state.selectedItems;\n      items.push(item);\n      this.setState({selectedItems: items});\n    }\n  }\n\n  deleteItem (item) {\n    const items = this.state.selectedItems.filter(value => value.id !== item.id);\n    this.setState({selectedItems: items});\n  }\n\n  async fetchItems (query, page, pageSize) {\n    this.setState({isLoading: true});\n    const fetched = await fetch(this.urlEndpoint + '/search?query=' + query + '&page=' + page + '&pageSize=' + pageSize + \"&clientId=\" + this.clientId)\n      .then(response => response.json());\n    this.setState({isLoading: false});\n    return fetched;\n  }\n\n  changeQuery (value) {\n    this.setState({query: value, page: 1})\n    this.fetchItems(value, this.state.page, this.state.pageSize).then(items => this.setState({items: items}))\n  }\n\n  onOk () {\n    this.ui.dialog.close(this.state.selectedItems);\n  }\n\n  render () {\n    const {isLoading} = this.state || false;\n    const {items} = this.state || [];\n    const {selectedItems} = this.state || [];\n    const classes = this.useStyles;\n    const isMultiMode = this.dataMode === dataMode.MULTIPLE;\n\n    return <Dialog fullScreen open={true}>\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          <TextField\n            className={classes.search}\n            autoFocus\n            margin=\"dense\"\n            id=\"search\"\n            label=\"Search\"\n            type=\"text\"\n            fullWidth\n            onChange={event => this.changeQuery(event.target.value)}\n          />\n          <IconButton disabled={true}>\n            <SvgIcon>\n              <path fill=\"#000000\" d=\"M3,11H11V3H3M3,21H11V13H3M13,21H21V13H13M13,3V11H21V3\"/>\n            </SvgIcon>\n          </IconButton>\n          <IconButton disabled={true}>\n            <SvgIcon>\n              <path fill=\"#000000\" d=\"M3,4H21V8H3V4M3,10H21V14H3V10M3,16H21V20H3V16Z\"/>\n            </SvgIcon>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <DialogContent ref={this.extDialog} onScroll={this.onScroll}>\n        <GridList>\n          {items.map((p, id) =>\n            <GridListTile key={id}>\n              <img src={p.image} alt={p.title}/>\n              <GridListTileBar\n                title={p.title}\n                subtitle={<span>{p.description}</span>}\n                actionIcon={(selectedItems.some(e => e.id === p.id)) ?\n                  <Fab color=\"secondary\" aria-label=\"Delete\">\n                    <DeleteIcon onClick={event => this.deleteItem(p)}/>\n                  </Fab> :\n                  <Fab color=\"primary\" aria-label=\"Add\">\n                    <AddIcon onClick={event => this.addItem(p)}/>\n                  </Fab>}\n              />\n            </GridListTile>\n          )}\n        </GridList>\n      </DialogContent>\n      <Fade\n        in={isLoading}\n        style={{\n          zIndex: 9999999, position: 'fixed', bottom: 0, right: 0,\n          transitionDelay: isLoading ? '800ms' : '0ms',\n        }}\n        unmountOnExit>\n        <CircularProgress/>\n      </Fade>\n      {isMultiMode && <Toolbar>\n        <Typography variant=\"h6\">\n          Selected:\n        </Typography>\n        <div style={{flex: 5}}>\n          {selectedItems.map((p, id) =>\n            <Chip key={id}\n                  size={'small'}\n                  avatar={<Avatar src={p.image ? p.image : 'default'}></Avatar>}\n                  label={p.title}\n            />\n          )}\n        </div>\n        <Button style={{flex: 1}} color=\"inherit\" onClick={this.onOk}>Ok</Button>\n      </Toolbar>\n      }\n    </Dialog>\n  }\n}\n\nexport default ExtPickerDialog;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport * as UiExtension from \"@bloomreach/ui-extension\";\nimport ExtPickerDialog from \"./Dialog\";\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  try {\n    const ui = await UiExtension.register();\n\n    const routing = (\n      <Router>\n        <Switch>\n          <Route path=\"/dialog\" render={props => <ExtPickerDialog ui={ui}/>}/>\n          <Route exact path=\"/\" render={props => <App ui={ui}/>}/>\n        </Switch>\n      </Router>\n    );\n\n    ReactDOM.render(routing, document.getElementById(\"root\"));\n\n  } catch (error) {\n    console.log(error);\n    console.error('Failed to register extension:', error.message);\n    console.error('- error code:', error.code);\n  }\n});\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}