{"version":3,"file":"ui-extension.min.js.map","sources":["../node_modules/emittery/index.js","../src/api.ts","../node_modules/penpal/lib/index.js","../src/parent.ts","../src/ui.ts","../src/ui-extension.ts"],"sourcesContent":["'use strict';\n\nconst anyMap = new WeakMap();\nconst eventsMap = new WeakMap();\nconst resolvedPromise = Promise.resolve();\n\nfunction assertEventName(eventName) {\n\tif (typeof eventName !== 'string') {\n\t\tthrow new TypeError('eventName must be a string');\n\t}\n}\n\nfunction assertListener(listener) {\n\tif (typeof listener !== 'function') {\n\t\tthrow new TypeError('listener must be a function');\n\t}\n}\n\nfunction getListeners(instance, eventName) {\n\tconst events = eventsMap.get(instance);\n\tif (!events.has(eventName)) {\n\t\tevents.set(eventName, new Set());\n\t}\n\n\treturn events.get(eventName);\n}\n\nclass Emittery {\n\tconstructor() {\n\t\tanyMap.set(this, new Set());\n\t\teventsMap.set(this, new Map());\n\t}\n\n\ton(eventName, listener) {\n\t\tassertEventName(eventName);\n\t\tassertListener(listener);\n\t\tgetListeners(this, eventName).add(listener);\n\t\treturn this.off.bind(this, eventName, listener);\n\t}\n\n\toff(eventName, listener) {\n\t\tassertEventName(eventName);\n\t\tassertListener(listener);\n\t\tgetListeners(this, eventName).delete(listener);\n\t}\n\n\tonce(eventName) {\n\t\treturn new Promise(resolve => {\n\t\t\tassertEventName(eventName);\n\t\t\tconst off = this.on(eventName, data => {\n\t\t\t\toff();\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t});\n\t}\n\n\tasync emit(eventName, eventData) {\n\t\tassertEventName(eventName);\n\n\t\tconst listeners = getListeners(this, eventName);\n\t\tconst anyListeners = anyMap.get(this);\n\t\tconst staticListeners = [...listeners];\n\t\tconst staticAnyListeners = [...anyListeners];\n\n\t\tawait resolvedPromise;\n\t\treturn Promise.all([\n\t\t\t...staticListeners.map(async listener => {\n\t\t\t\tif (listeners.has(listener)) {\n\t\t\t\t\treturn listener(eventData);\n\t\t\t\t}\n\t\t\t}),\n\t\t\t...staticAnyListeners.map(async listener => {\n\t\t\t\tif (anyListeners.has(listener)) {\n\t\t\t\t\treturn listener(eventName, eventData);\n\t\t\t\t}\n\t\t\t})\n\t\t]);\n\t}\n\n\tasync emitSerial(eventName, eventData) {\n\t\tassertEventName(eventName);\n\n\t\tconst listeners = getListeners(this, eventName);\n\t\tconst anyListeners = anyMap.get(this);\n\t\tconst staticListeners = [...listeners];\n\t\tconst staticAnyListeners = [...anyListeners];\n\n\t\tawait resolvedPromise;\n\t\t/* eslint-disable no-await-in-loop */\n\t\tfor (const listener of staticListeners) {\n\t\t\tif (listeners.has(listener)) {\n\t\t\t\tawait listener(eventData);\n\t\t\t}\n\t\t}\n\n\t\tfor (const listener of staticAnyListeners) {\n\t\t\tif (anyListeners.has(listener)) {\n\t\t\t\tawait listener(eventName, eventData);\n\t\t\t}\n\t\t}\n\t\t/* eslint-enable no-await-in-loop */\n\t}\n\n\tonAny(listener) {\n\t\tassertListener(listener);\n\t\tanyMap.get(this).add(listener);\n\t\treturn this.offAny.bind(this, listener);\n\t}\n\n\toffAny(listener) {\n\t\tassertListener(listener);\n\t\tanyMap.get(this).delete(listener);\n\t}\n\n\tclearListeners(eventName) {\n\t\tif (typeof eventName === 'string') {\n\t\t\tgetListeners(this, eventName).clear();\n\t\t} else {\n\t\t\tanyMap.get(this).clear();\n\t\t\tfor (const listeners of eventsMap.get(this).values()) {\n\t\t\t\tlisteners.clear();\n\t\t\t}\n\t\t}\n\t}\n\n\tlistenerCount(eventName) {\n\t\tif (typeof eventName === 'string') {\n\t\t\treturn anyMap.get(this).size + getListeners(this, eventName).size;\n\t\t}\n\n\t\tif (typeof eventName !== 'undefined') {\n\t\t\tassertEventName(eventName);\n\t\t}\n\n\t\tlet count = anyMap.get(this).size;\n\n\t\tfor (const value of eventsMap.get(this).values()) {\n\t\t\tcount += value.size;\n\t\t}\n\n\t\treturn count;\n\t}\n}\n\n// Subclass used to encourage TS users to type their events.\nEmittery.Typed = class extends Emittery {};\nObject.defineProperty(Emittery.Typed, 'Typed', {\n\tenumerable: false,\n\tvalue: undefined\n});\n\nmodule.exports = Emittery;\n","/*\n * Copyright 2018-2019 Hippo B.V. (http://www.onehippo.com)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Defines all public API of the ui-extension library.\n * @module api\n */\n\n/**\n * Callback function for events generated by the CMS.\n */\nexport type EventHandler<Events> = (eventData: Events[keyof Events]) => any;\n\n/**\n * Function to unsubscribe an [[EventHandler]] with.\n */\ntype UnsubscribeFn = () => void;\n\n/**\n * Identifies which error occurred while using the ui-extension library.\n */\nexport enum UiExtensionErrorCode {\n  /**\n   * The connection with the CMS has been destroyed.\n   */\n  ConnectionDestroyed = 'ConnectionDestroyed',\n\n  /**\n   * A dialog was canceled.\n   * @since 13.2\n   */\n  DialogCanceled = 'DialogCanceled',\n\n  /**\n   * A dialog is already shown to the user.\n   * @since 13.2\n   */\n  DialogExists = 'DialogExists',\n\n  /**\n   * The version of the CMS in which the UI extension is loaded is not compatible with the version of the\n   * ui-extension library used by the UI extension.\n   */\n  IncompatibleParent = 'IncompatibleParent',\n\n  /**\n   * An internal error occurred.\n   */\n  InternalError = 'InternalError',\n\n  /**\n   * The UI extension is not running in an iframe.\n   */\n  NotInIframe = 'NotInIframe',\n}\n\n/**\n * Error returned by the ui-extension library via a rejected Promise.\n */\nexport interface UiExtensionError {\n  /**\n   * Identifies the error to applications.\n   */\n  code: UiExtensionErrorCode;\n\n  /**\n   * Explains the error to humans.\n   */\n  message: string;\n}\n\n/**\n * Defines the different possible styling themes of the surrounding user interface.\n * @since 13.2\n */\nexport enum UiStyling {\n  Classic = 'classic',\n  Material = 'material',\n}\n\n/**\n * Properties of the CMS that loads the UI extension.\n */\nexport interface UiProperties {\n  /**\n   * The base URL of the CMS, without any query parameters.\n   */\n  baseUrl: string;\n\n  /**\n   * Properties of this UI extension.\n   */\n  extension: {\n    /**\n     * The configuration of this UI extension. How to interpret the string\n     * (e.g. parse as JSON) is up to the implementation of the UI extension.\n     */\n    config: string,\n  };\n\n  /**\n   * The locale of the CMS user as selected in the login page. For example: \"en\".\n   */\n  locale: string;\n\n  /**\n   * The styling of the user interface in which the extension is shown.\n   * @since 13.2\n   */\n  styling: UiStyling;\n\n  /**\n   * The time zone of the CMS user as selected on the login page. For example: \"Europe/Amsterdam\".\n   */\n  timeZone: string;\n\n  /**\n   * Properties of the CMS user.\n   */\n  user: {\n    /**\n     * The username of the CMS user. For example: \"admin\".\n     */\n    id: string,\n\n    /**\n     * The first name of the CMS user. For example: \"Suzanna\".\n     */\n    firstName: string,\n\n    /**\n     * The last name of the CMS user. For example: \"Doe\".\n     */\n    lastName: string,\n\n    /**\n     * Concatenation of the first and last name of the CMS user, or the username if both are blank.\n     * For example: \"Suzanna Doe\" or \"admin\".\n     */\n    displayName: string,\n  };\n\n  /**\n   * The version of the CMS. For example: \"13.0.0\".\n   */\n  version: string;\n}\n\n/**\n * API to access information about and communicate with the CMS that loads the UI extension.\n */\nexport interface UiScope extends UiProperties {\n  /**\n   * API for the current channel.\n   */\n  channel: ChannelScope;\n\n  /**\n   * API for the current document.\n   */\n  document: DocumentScope;\n\n  /**\n   * API for dialogs.\n   */\n  dialog: DialogScope;\n}\n\n/**\n * API to access information about and communicate with the current channel shown in the Channel Manager.\n */\nexport interface ChannelScope extends Emitter<ChannelScopeEvents> {\n  /**\n   * API for the current page in the current channel.\n   */\n  page: PageScope;\n\n  /**\n   * Refreshes the metadata of the currently shown channel (e.g. whether it has changes, the sitemap, etc.).\n   * The Channel Manager UI will be updated to reflect the channelâ€™s refreshed metadata.\n   */\n  refresh: () => Promise<void>;\n}\n\nexport interface ChannelScopeEvents {\n  /**\n   * Triggered when a user publishes channel changes.\n   * @since 13.1\n   * @event\n   */\n  'changes.publish': void;\n\n  /**\n   * Triggered when a user discards channel changes\n   * @since 13.1\n   * @event\n   */\n  'changes.discard': void;\n}\n\n/**\n * API to access information about and communicate with the current page\n * in the current channel shown in the Channel Manager.\n */\nexport interface PageScope extends Emitter<PageScopeEvents> {\n  /**\n   * @returns A Promise that resolves with [[PageProperties]] of the current page.\n   */\n  get(): Promise<PageProperties>;\n\n  /**\n   * Refreshes the page currently shown in the Channel Manager.\n   */\n  refresh(): Promise<void>;\n}\n\n/**\n * An emitter of events.\n */\nexport interface Emitter<Events> {\n  /**\n   * Subscribes a handler for events emitted by the CMS. The type of the\n   * emitted value depends on the emitted event.\n   *\n   * @param eventName the name of the emitted event.\n   * @param handler the function to call with the emitted value.\n   *\n   * @returns A function to unsubscribe the handler again.\n   */\n  on(eventName: keyof Events, handler: EventHandler<Events>): UnsubscribeFn;\n}\n\n/**\n * A map of all events related to a page in a channel and the type of value they emit.\n */\nexport interface PageScopeEvents {\n  /**\n   * Triggered when a user navigates to another page in the Channel Manager.\n   * Emits the properties of the new page.\n   * @event\n   */\n  navigate: PageProperties;\n}\n\n/**\n * Properties of a page in a channel.\n */\nexport interface PageProperties {\n  /**\n   * Properties of the channel the page is part of.\n   */\n  channel: {\n    /**\n     * The context path of the site application. For example \"/site\" or \"/\".\n     * @since 13.2\n     */\n    contextPath: string;\n    /**\n     * The identifier of the channel. For example: \"example-preview\".\n     */\n    id: string;\n    /**\n     * The mount path of the channel. For example \"/subsite\", \"/europe/nl\" or an empty string for the root mount.\n     * @since 13.2\n     */\n    mountPath: string;\n  };\n\n  /**\n   * The UUID of the `hst:component` root node of the page hierarchy.\n   */\n  id: string;\n\n  /**\n   * Properties of the matched sitemap item.\n   */\n  sitemapItem: {\n    /**\n     * The UUID of the sitemap item.\n     */\n    id: string;\n  };\n\n  /**\n   * The URL of the page relative to the mount path of the channel. For example \"/news/mypage.html\" or an empty string\n   * for the home page.\n   * @since 13.2\n   */\n  path: string;\n\n  /**\n   * The public URL of the page.\n   */\n  url: string;\n}\n\n/**\n * API to access information about and communicate with the current document.\n * @since 13.2\n */\nexport interface DocumentScope {\n  /**\n   * @since 13.2\n   * @returns A Promise that resolves with [[DocumentProperties]] of the current document.\n   */\n  get(): Promise<DocumentProperties>;\n\n  /**\n   * API for the current field of the current document.\n   * @since 13.2\n   */\n  field: FieldScope;\n}\n\n/**\n * Defines the different possible modes of a document editor.\n * @since 13.2\n */\nexport enum DocumentEditorMode {\n  View = 'view',\n  Compare = 'compare',\n  Edit = 'edit',\n}\n\n/**\n * Properties of a document.\n * @since 13.2\n */\nexport interface DocumentProperties {\n  /**\n   * The UUID of the handle node.\n   * @since 13.2\n   */\n  id: string;\n\n  /**\n   * Display name of the document.\n   * @since 13.2\n   */\n  displayName: string;\n\n  /**\n   * Locale of the document, e.g. \"sv\". Is undefined when the document does not have a locale.\n   * @since 13.2\n   */\n  locale: string;\n\n  /**\n   * The mode of the document editor.\n   * @since 13.2\n   */\n  mode: DocumentEditorMode;\n\n  /**\n   * The URL name of the document.\n   * @since 13.2\n   */\n  urlName: string;\n\n  /**\n   * UUID of the currently shown variant, typically 'draft' or 'preview'.\n   * @since 13.2\n   */\n  variant: {\n    id: string;\n  };\n}\n\n/**\n * API to access information about and communicate with the current document field.\n * @since 13.2\n */\nexport interface FieldScope {\n  /**\n   * Gets the current field value.\n   * @since 13.2\n   * @return A promise that resolves with the current field value.\n   */\n  getValue(): Promise<string>;\n\n  /**\n   * Gets the field value to compare the current value to.\n   * Only valid when the document editor mode is [[DocumentEditorMode.Compare]].\n   *\n   * @since 13.2\n   * @return A promise that resolves with the compare value, or null when the\n   * document editor mode is not [[DocumentEditorMode.Compare]].\n   */\n  getCompareValue(): Promise<string>;\n\n  /**\n   * Updates current field value.\n   * @since 13.2\n   * @param value the new field value\n   */\n  setValue(value: string): Promise<void>;\n\n  /**\n   * Set the height of the surrounding iframe.\n   * @since 13.2\n   * @param height the number of pixels or\n   *  'auto' for automatic height detection or\n   *  'initial' for initial height from the config\n   */\n  setHeight(height: 'auto' | 'initial' | number): Promise<void>;\n}\n\n/**\n * API to open, close and communicate with dialogs.\n * @since 13.2\n */\nexport interface DialogScope {\n\n  /**\n   * Closes an open dialog, rejecting the promise returned by [[open]].\n   * @since 13.2\n   */\n  cancel(): Promise<void>;\n\n  /**\n   * Closes an open dialog, resolving the promise returned by [[open]] with a value.\n   * @param value The value selected in the dialog. The value should be compatible with [the structured clone\n   * algorithm](https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm).\n   * @since 13.2\n   */\n  close(value: any): Promise<void>;\n\n  /**\n   * Opens a dialog.\n   * @since 13.2\n   */\n  open(options: DialogProperties): Promise<void>;\n\n  /**\n   * @since 13.2\n   * @returns A Promise that resolves with [[DialogProperties]] of the current dialog.\n   */\n  options(): Promise<DialogProperties>;\n}\n\n/**\n * Defines the different possible modes of a document editor.\n * @since 13.2\n */\nexport enum DialogSize {\n  Large = 'large',\n  Medium = 'medium',\n  Small = 'small',\n}\n\n/**\n * Properties of a dialog.\n * @since 13.2\n */\nexport interface DialogProperties {\n  /**\n   * A value to pass to the dialog. For example the current field value, that can be used to preselect an item in the\n   * dialog. The value should be compatible with [the structured clone\n   * algorithm](https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm).\n   * @since 13.2\n   */\n  value?: any;\n\n  /**\n   * The size of the dialog. Defaults to [[Medium]].\n   * @since 13.2\n   */\n  size?: DialogSize;\n\n  /**\n   * Title of the dialog.\n   * @since 13.2\n   */\n  title: string;\n\n  /**\n   * The URL to load the dialog contents from. Can be absolute or relative to the url of the UI extension.\n   * @since 13.2\n   */\n  url: string;\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.ERR_IFRAME_ALREADY_ATTACHED_TO_DOM = exports.ERR_NOT_IN_IFRAME = exports.ERR_CONNECTION_TIMEOUT = exports.ERR_CONNECTION_DESTROYED = void 0;\nvar HANDSHAKE = 'handshake';\nvar HANDSHAKE_REPLY = 'handshake-reply';\nvar CALL = 'call';\nvar REPLY = 'reply';\nvar FULFILLED = 'fulfilled';\nvar REJECTED = 'rejected';\nvar MESSAGE = 'message';\nvar DATA_CLONE_ERROR = 'DataCloneError';\nvar ERR_CONNECTION_DESTROYED = 'ConnectionDestroyed';\nexports.ERR_CONNECTION_DESTROYED = ERR_CONNECTION_DESTROYED;\nvar ERR_CONNECTION_TIMEOUT = 'ConnectionTimeout';\nexports.ERR_CONNECTION_TIMEOUT = ERR_CONNECTION_TIMEOUT;\nvar ERR_NOT_IN_IFRAME = 'NotInIframe';\nexports.ERR_NOT_IN_IFRAME = ERR_NOT_IN_IFRAME;\nvar ERR_IFRAME_ALREADY_ATTACHED_TO_DOM = 'IframeAlreadyAttachedToDom';\nexports.ERR_IFRAME_ALREADY_ATTACHED_TO_DOM = ERR_IFRAME_ALREADY_ATTACHED_TO_DOM;\nvar CHECK_IFRAME_IN_DOC_INTERVAL = 60000;\nvar DEFAULT_PORTS = {\n  'http:': '80',\n  'https:': '443'\n};\nvar URL_REGEX = /^(https?:|file:)?\\/\\/([^/:]+)?(:(\\d+))?/;\nvar Penpal = {\n  ERR_CONNECTION_DESTROYED: ERR_CONNECTION_DESTROYED,\n  ERR_CONNECTION_TIMEOUT: ERR_CONNECTION_TIMEOUT,\n  ERR_NOT_IN_IFRAME: ERR_NOT_IN_IFRAME,\n  ERR_IFRAME_ALREADY_ATTACHED_TO_DOM: ERR_IFRAME_ALREADY_ATTACHED_TO_DOM,\n\n  /**\n   * Promise implementation.\n   * @type {Constructor}\n   */\n  Promise: function () {\n    try {\n      return window ? window.Promise : null;\n    } catch (e) {\n      return null;\n    }\n  }(),\n\n  /**\n   * Whether debug messages should be logged.\n   * @type {boolean}\n   */\n  debug: false\n};\n/**\n * @return {number} A unique ID (not universally unique)\n */\n\nvar generateId = function () {\n  var id = 0;\n  return function () {\n    return ++id;\n  };\n}();\n/**\n * Logs a message.\n * @param {...*} args One or more items to log\n */\n\n\nvar log = function log() {\n  if (Penpal.debug) {\n    var _console;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    (_console = console).log.apply(_console, ['[Penpal]'].concat(args)); // eslint-disable-line no-console\n\n  }\n};\n/**\n * Converts a URL into an origin.\n * @param {string} url\n * @return {string} The URL's origin\n */\n\n\nvar getOriginFromUrl = function getOriginFromUrl(url) {\n  var location = document.location;\n  var regexResult = URL_REGEX.exec(url);\n  var protocol;\n  var hostname;\n  var port;\n\n  if (regexResult) {\n    // It's an absolute URL. Use the parsed info.\n    // regexResult[1] will be undefined if the URL starts with //\n    protocol = regexResult[1] ? regexResult[1] : location.protocol;\n    hostname = regexResult[2];\n    port = regexResult[4];\n  } else {\n    // It's a relative path. Use the current location's info.\n    protocol = location.protocol;\n    hostname = location.hostname;\n    port = location.port;\n  } // If the protocol is file, the origin is \"null\"\n  // The origin of a document with file protocol is an opaque origin\n  // and its serialization \"null\" [1]\n  // [1] https://html.spec.whatwg.org/multipage/origin.html#origin\n\n\n  if (protocol === \"file:\") {\n    return \"null\";\n  } // If the port is the default for the protocol, we don't want to add it to the origin string\n  // or it won't match the message's event.origin.\n\n\n  var portSuffix = port && port !== DEFAULT_PORTS[protocol] ? \":\".concat(port) : '';\n  return \"\".concat(protocol, \"//\").concat(hostname).concat(portSuffix);\n};\n/**\n * A simplified promise class only used internally for when destroy() is called. This is\n * used to destroy connections synchronously while promises typically resolve asynchronously.\n *\n * @param {Function} executor\n * @returns {Object}\n * @constructor\n */\n\n\nvar DestructionPromise = function DestructionPromise(executor) {\n  var handlers = [];\n  executor(function () {\n    handlers.forEach(function (handler) {\n      handler();\n    });\n  });\n  return {\n    then: function then(handler) {\n      handlers.push(handler);\n    }\n  };\n};\n/**\n * Converts an error object into a plain object.\n * @param {Error} Error object.\n * @returns {Object}\n */\n\n\nvar serializeError = function serializeError(_ref) {\n  var name = _ref.name,\n      message = _ref.message,\n      stack = _ref.stack;\n  return {\n    name: name,\n    message: message,\n    stack: stack\n  };\n};\n/**\n * Converts a plain object into an error object.\n * @param {Object} Object with error properties.\n * @returns {Error}\n */\n\n\nvar deserializeError = function deserializeError(obj) {\n  var deserializedError = new Error();\n  Object.keys(obj).forEach(function (key) {\n    return deserializedError[key] = obj[key];\n  });\n  return deserializedError;\n};\n/**\n * Augments an object with methods that match those defined by the remote. When these methods are\n * called, a \"call\" message will be sent to the remote, the remote's corresponding method will be\n * executed, and the method's return value will be returned via a message.\n * @param {Object} callSender Sender object that should be augmented with methods.\n * @param {Object} info Information about the local and remote windows.\n * @param {Array} methodNames Names of methods available to be called on the remote.\n * @param {Promise} destructionPromise A promise resolved when destroy() is called on the penpal\n * connection.\n * @returns {Object} The call sender object with methods that may be called.\n */\n\n\nvar connectCallSender = function connectCallSender(callSender, info, methodNames, destroy, destructionPromise) {\n  var localName = info.localName,\n      local = info.local,\n      remote = info.remote,\n      remoteOrigin = info.remoteOrigin;\n  var destroyed = false;\n  log(\"\".concat(localName, \": Connecting call sender\"));\n\n  var createMethodProxy = function createMethodProxy(methodName) {\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      log(\"\".concat(localName, \": Sending \").concat(methodName, \"() call\")); // This handles the case where the iframe has been removed from the DOM\n      // (and therefore its window closed), the consumer has not yet\n      // called destroy(), and the user calls a method exposed by\n      // the remote. We detect the iframe has been removed and force\n      // a destroy() immediately so that the consumer sees the error saying\n      // the connection has been destroyed.\n\n      if (remote.closed) {\n        destroy();\n      }\n\n      if (destroyed) {\n        var error = new Error(\"Unable to send \".concat(methodName, \"() call due \") + \"to destroyed connection\");\n        error.code = ERR_CONNECTION_DESTROYED;\n        throw error;\n      }\n\n      return new Penpal.Promise(function (resolve, reject) {\n        var id = generateId();\n\n        var handleMessageEvent = function handleMessageEvent(event) {\n          if (event.source === remote && event.origin === remoteOrigin && event.data.penpal === REPLY && event.data.id === id) {\n            log(\"\".concat(localName, \": Received \").concat(methodName, \"() reply\"));\n            local.removeEventListener(MESSAGE, handleMessageEvent);\n            var returnValue = event.data.returnValue;\n\n            if (event.data.returnValueIsError) {\n              returnValue = deserializeError(returnValue);\n            }\n\n            (event.data.resolution === FULFILLED ? resolve : reject)(returnValue);\n          }\n        };\n\n        local.addEventListener(MESSAGE, handleMessageEvent);\n        remote.postMessage({\n          penpal: CALL,\n          id: id,\n          methodName: methodName,\n          args: args\n        }, remoteOrigin);\n      });\n    };\n  };\n\n  destructionPromise.then(function () {\n    destroyed = true;\n  });\n  methodNames.reduce(function (api, methodName) {\n    api[methodName] = createMethodProxy(methodName);\n    return api;\n  }, callSender);\n};\n/**\n * Listens for \"call\" messages coming from the remote, executes the corresponding method, and\n * responds with the return value.\n * @param {Object} info Information about the local and remote windows.\n * @param {Object} methods The keys are the names of the methods that can be called by the remote\n * while the values are the method functions.\n * @param {Promise} destructionPromise A promise resolved when destroy() is called on the penpal\n * connection.\n * @returns {Function} A function that may be called to disconnect the receiver.\n */\n\n\nvar connectCallReceiver = function connectCallReceiver(info, methods, destructionPromise) {\n  var localName = info.localName,\n      local = info.local,\n      remote = info.remote,\n      remoteOrigin = info.remoteOrigin;\n  var destroyed = false;\n  log(\"\".concat(localName, \": Connecting call receiver\"));\n\n  var handleMessageEvent = function handleMessageEvent(event) {\n    if (event.source === remote && event.origin === remoteOrigin && event.data.penpal === CALL) {\n      var _event$data = event.data,\n          methodName = _event$data.methodName,\n          args = _event$data.args,\n          id = _event$data.id;\n      log(\"\".concat(localName, \": Received \").concat(methodName, \"() call\"));\n\n      if (methodName in methods) {\n        var createPromiseHandler = function createPromiseHandler(resolution) {\n          return function (returnValue) {\n            log(\"\".concat(localName, \": Sending \").concat(methodName, \"() reply\"));\n\n            if (destroyed) {\n              // It's possible to throw an error here, but it would need to be thrown asynchronously\n              // and would only be catchable using window.onerror. This is because the consumer\n              // is merely returning a value from their method and not calling any function\n              // that they could wrap in a try-catch. Even if the consumer were to catch the error,\n              // the value of doing so is questionable. Instead, we'll just log a message.\n              log(\"\".concat(localName, \": Unable to send \").concat(methodName, \"() reply due to destroyed connection\"));\n              return;\n            }\n\n            var message = {\n              penpal: REPLY,\n              id: id,\n              resolution: resolution,\n              returnValue: returnValue\n            };\n\n            if (resolution === REJECTED && returnValue instanceof Error) {\n              message.returnValue = serializeError(returnValue);\n              message.returnValueIsError = true;\n            }\n\n            try {\n              remote.postMessage(message, remoteOrigin);\n            } catch (err) {\n              // If a consumer attempts to send an object that's not cloneable (e.g., window),\n              // we want to ensure the receiver's promise gets rejected.\n              if (err.name === DATA_CLONE_ERROR) {\n                remote.postMessage({\n                  penpal: REPLY,\n                  id: id,\n                  resolution: REJECTED,\n                  returnValue: serializeError(err),\n                  returnValueIsError: true\n                }, remoteOrigin);\n              }\n\n              throw err;\n            }\n          };\n        };\n\n        new Penpal.Promise(function (resolve) {\n          return resolve(methods[methodName].apply(methods, args));\n        }).then(createPromiseHandler(FULFILLED), createPromiseHandler(REJECTED));\n      }\n    }\n  };\n\n  local.addEventListener(MESSAGE, handleMessageEvent);\n  destructionPromise.then(function () {\n    destroyed = true;\n    local.removeEventListener(MESSAGE, handleMessageEvent);\n  });\n};\n/**\n * @typedef {Object} Child\n * @property {Promise} promise A promise which will be resolved once a connection has\n * been established.\n * @property {HTMLIframeElement} iframe The created iframe element.\n * @property {Function} destroy A method that, when called, will remove the iframe element from\n * the DOM and clean up event listeners.\n */\n\n/**\n * Creates an iframe, loads a webpage into the URL, and attempts to establish communication with\n * the iframe.\n * @param {Object} options\n * @param {string} options.url The URL of the webpage that should be loaded into the created iframe.\n * @param {HTMLElement} [options.appendTo] The container to which the iframe should be appended.\n * @param {Object} [options.methods={}] Methods that may be called by the iframe.\n * @param {Number} [options.timeout] The amount of time, in milliseconds, Penpal should wait\n * for the child to respond before rejecting the connection promise.\n * @return {Child}\n */\n\n\nPenpal.connectToChild = function (_ref2) {\n  var url = _ref2.url,\n      appendTo = _ref2.appendTo,\n      iframe = _ref2.iframe,\n      _ref2$methods = _ref2.methods,\n      methods = _ref2$methods === void 0 ? {} : _ref2$methods,\n      timeout = _ref2.timeout;\n\n  if (iframe && iframe.parentNode) {\n    var error = new Error('connectToChild() must not be called with an iframe already attached to DOM');\n    error.code = ERR_IFRAME_ALREADY_ATTACHED_TO_DOM;\n    throw error;\n  }\n\n  var destroy;\n  var connectionDestructionPromise = new DestructionPromise(function (resolveConnectionDestructionPromise) {\n    destroy = resolveConnectionDestructionPromise;\n  });\n  var parent = window;\n  iframe = iframe || document.createElement('iframe');\n  iframe.src = url;\n  var childOrigin = getOriginFromUrl(url);\n  var promise = new Penpal.Promise(function (resolveConnectionPromise, reject) {\n    var connectionTimeoutId;\n\n    if (timeout !== undefined) {\n      connectionTimeoutId = setTimeout(function () {\n        var error = new Error(\"Connection to child timed out after \".concat(timeout, \"ms\"));\n        error.code = ERR_CONNECTION_TIMEOUT;\n        reject(error);\n        destroy();\n      }, timeout);\n    } // We resolve the promise with the call sender. If the child reconnects (for example, after\n    // refreshing or navigating to another page that uses Penpal, we'll update the call sender\n    // with methods that match the latest provided by the child.\n\n\n    var callSender = {};\n    var receiverMethodNames;\n    var destroyCallReceiver;\n\n    var handleMessage = function handleMessage(event) {\n      var child = iframe.contentWindow;\n\n      if (event.source === child && event.origin === childOrigin && event.data.penpal === HANDSHAKE) {\n        log('Parent: Received handshake, sending reply'); // If event.origin is \"null\", the remote protocol is file:\n        // and we must post messages with \"*\" as targetOrigin [1]\n        // [1] https://developer.mozilla.org/fr/docs/Web/API/Window/postMessage#Utiliser_window.postMessage_dans_les_extensions\n\n        var remoteOrigin = event.origin === \"null\" ? \"*\" : event.origin;\n        event.source.postMessage({\n          penpal: HANDSHAKE_REPLY,\n          methodNames: Object.keys(methods)\n        }, remoteOrigin);\n        var info = {\n          localName: 'Parent',\n          local: parent,\n          remote: child,\n          remoteOrigin: remoteOrigin\n        }; // If the child reconnected, we need to destroy the previous call receiver before setting\n        // up a new one.\n\n        if (destroyCallReceiver) {\n          destroyCallReceiver();\n        } // When this promise is resolved, it will destroy the call receiver (stop listening to\n        // method calls from the child) and delete its methods off the call sender.\n\n\n        var callReceiverDestructionPromise = new DestructionPromise(function (resolveCallReceiverDestructionPromise) {\n          connectionDestructionPromise.then(resolveCallReceiverDestructionPromise);\n          destroyCallReceiver = resolveCallReceiverDestructionPromise;\n        });\n        connectCallReceiver(info, methods, callReceiverDestructionPromise); // If the child reconnected, we need to remove the methods from the previous call receiver\n        // off the sender.\n\n        if (receiverMethodNames) {\n          receiverMethodNames.forEach(function (receiverMethodName) {\n            delete callSender[receiverMethodName];\n          });\n        }\n\n        receiverMethodNames = event.data.methodNames;\n        connectCallSender(callSender, info, receiverMethodNames, destroy, connectionDestructionPromise);\n        clearTimeout(connectionTimeoutId);\n        resolveConnectionPromise(callSender);\n      }\n    };\n\n    parent.addEventListener(MESSAGE, handleMessage);\n    log('Parent: Loading iframe');\n    (appendTo || document.body).appendChild(iframe); // This is to prevent memory leaks when the iframe is removed\n    // from the document and the consumer hasn't called destroy().\n    // Without this, event listeners attached to the window would\n    // stick around and since the event handlers have a reference\n    // to the iframe in their closures, the iframe would stick around\n    // too.\n\n    var checkIframeInDocIntervalId = setInterval(function () {\n      if (!document.contains(iframe)) {\n        clearInterval(checkIframeInDocIntervalId);\n        destroy();\n      }\n    }, CHECK_IFRAME_IN_DOC_INTERVAL);\n    connectionDestructionPromise.then(function () {\n      if (iframe.parentNode) {\n        iframe.parentNode.removeChild(iframe);\n      }\n\n      parent.removeEventListener(MESSAGE, handleMessage);\n      clearInterval(checkIframeInDocIntervalId);\n      var error = new Error('Connection destroyed');\n      error.code = ERR_CONNECTION_DESTROYED;\n      reject(error);\n    });\n  });\n  return {\n    promise: promise,\n    iframe: iframe,\n    destroy: destroy\n  };\n};\n/**\n * @typedef {Object} Parent\n * @property {Promise} promise A promise which will be resolved once a connection has\n * been established.\n */\n\n/**\n * Attempts to establish communication with the parent window.\n * @param {Object} options\n * @param {string} [options.parentOrigin=*] Valid parent origin used to restrict communication.\n * @param {Object} [options.methods={}] Methods that may be called by the parent window.\n * @param {Number} [options.timeout] The amount of time, in milliseconds, Penpal should wait\n * for the parent to respond before rejecting the connection promise.\n * @return {Parent}\n */\n\n\nPenpal.connectToParent = function () {\n  var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref3$parentOrigin = _ref3.parentOrigin,\n      parentOrigin = _ref3$parentOrigin === void 0 ? '*' : _ref3$parentOrigin,\n      _ref3$methods = _ref3.methods,\n      methods = _ref3$methods === void 0 ? {} : _ref3$methods,\n      timeout = _ref3.timeout;\n\n  if (window === window.top) {\n    var error = new Error('connectToParent() must be called within an iframe');\n    error.code = ERR_NOT_IN_IFRAME;\n    throw error;\n  }\n\n  var destroy;\n  var connectionDestructionPromise = new DestructionPromise(function (resolveConnectionDestructionPromise) {\n    destroy = resolveConnectionDestructionPromise;\n  });\n  var child = window;\n  var parent = child.parent;\n  var promise = new Penpal.Promise(function (resolveConnectionPromise, reject) {\n    var connectionTimeoutId;\n\n    if (timeout !== undefined) {\n      connectionTimeoutId = setTimeout(function () {\n        var error = new Error(\"Connection to parent timed out after \".concat(timeout, \"ms\"));\n        error.code = ERR_CONNECTION_TIMEOUT;\n        reject(error);\n        destroy();\n      }, timeout);\n    }\n\n    var handleMessageEvent = function handleMessageEvent(event) {\n      if ((parentOrigin === '*' || parentOrigin === event.origin) && event.source === parent && event.data.penpal === HANDSHAKE_REPLY) {\n        log('Child: Received handshake reply');\n        child.removeEventListener(MESSAGE, handleMessageEvent);\n        var info = {\n          localName: 'Child',\n          local: child,\n          remote: parent,\n          remoteOrigin: event.origin\n        };\n        var callSender = {};\n        connectCallReceiver(info, methods, connectionDestructionPromise);\n        connectCallSender(callSender, info, event.data.methodNames, destroy, connectionDestructionPromise);\n        clearTimeout(connectionTimeoutId);\n        resolveConnectionPromise(callSender);\n      }\n    };\n\n    child.addEventListener(MESSAGE, handleMessageEvent);\n    connectionDestructionPromise.then(function () {\n      child.removeEventListener(MESSAGE, handleMessageEvent);\n      var error = new Error('Connection destroyed');\n      error.code = ERR_CONNECTION_DESTROYED;\n      reject(error);\n    });\n    log('Child: Sending handshake');\n    parent.postMessage({\n      penpal: HANDSHAKE,\n      methodNames: Object.keys(methods)\n    }, parentOrigin);\n  });\n  return {\n    promise: promise,\n    destroy: destroy\n  };\n};\n\nvar _default = Penpal;\nexports.default = _default;","/*\n * Copyright 2018-2019 Hippo B.V. (http://www.onehippo.com)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Handles all interaction with the parent frame using the Penpal library.\n * @module parent\n * @see https://github.com/Aaronius/penpal\n */\n\n/**\n * Disable TSLint for imports that start with an uppercase letter\n * @see https://github.com/Microsoft/tslint-microsoft-contrib/issues/387\n */\nimport Emittery from 'emittery'; // tslint:disable-line:import-name\nimport Penpal from 'penpal';     // tslint:disable-line:import-name\nimport { UiExtensionError, UiExtensionErrorCode } from './api';\n\ntype MethodOf<T> = keyof Pick<T, {\n  [K in keyof T]: T[K] extends Callable ? K : never;\n}[keyof T]>;\ntype PromisedOf<T extends Callable> = T extends Callable<Promise<infer U>> ? U : never;\ntype ArgumentsOf<T extends Callable> = T extends Callable<any, infer U> ? U : never;\n\ntype PenpalError = Error & { code?: string };\n\nexport type ParentMethod<T = void, U extends unknown[] = []> = Callable<Promise<T>, U>;\nexport interface Parent {\n  [K: string]: ParentMethod<any, any[]>;\n}\n\nclass ParentError extends Error implements UiExtensionError {\n  constructor(public code: UiExtensionErrorCode,\n              public message: string) {\n    super(message);\n\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n\n  toPromise(): Promise<any> {\n    return Promise.reject(this);\n  }\n\n  static fromPenpal(error: PenpalError): ParentError {\n    const errorCode = ParentError.convertPenpalErrorCode(error);\n    return new ParentError(errorCode, error.message);\n  }\n\n  private static convertPenpalErrorCode(error: PenpalError): UiExtensionErrorCode {\n    switch (error.code) {\n      case Penpal.ERR_NOT_IN_IFRAME:\n        return UiExtensionErrorCode.NotInIframe;\n      case Penpal.ERR_CONNECTION_DESTROYED:\n        return UiExtensionErrorCode.ConnectionDestroyed;\n      case 'DialogCanceled':\n        return UiExtensionErrorCode.DialogCanceled;\n      case 'DialogExists':\n        return UiExtensionErrorCode.DialogExists;\n      default:\n        return UiExtensionErrorCode.InternalError;\n    }\n  }\n}\n\nexport class ParentConnection<T extends Parent = any> {\n  constructor(private _parent: T) {}\n\n  call<M extends MethodOf<T>>(method: M, ...args: ArgumentsOf<T[M]>): Promise<PromisedOf<T[M]>> {\n    if (!this._parent[method]) {\n      return new ParentError(UiExtensionErrorCode.IncompatibleParent, `missing ${method}()`).toPromise();\n    }\n    try {\n      return this._parent[method](...args)\n        .catch(ParentConnection.convertPenpalError);\n    } catch (error) {\n      return ParentConnection.convertPenpalError(error);\n    }\n  }\n\n  private static convertPenpalError(error: PenpalError): Promise<any> {\n    return ParentError.fromPenpal(error).toPromise();\n  }\n}\n\nexport function connect<T extends Parent = any>(\n  parentOrigin: string,\n  eventEmitter: Emittery,\n): Promise<ParentConnection<T>> {\n  try {\n    return Penpal.connectToParent({\n      parentOrigin,\n      methods: {\n        emitEvent: eventEmitter.emit.bind(eventEmitter),\n      },\n    }).promise.then((parent: T) => new ParentConnection(parent));\n  } catch (penpalError) {\n    return ParentError.fromPenpal(penpalError).toPromise();\n  }\n}\n","/*\n * Copyright 2018-2019 Hippo B.V. (http://www.onehippo.com)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module ui-extension\n * Main entry point of the ui-extension library. Implements the public API defined in the\n * api module and communicates with the parent frame using the parent module.\n *\n * @see module:api\n * @see module:parent\n */\n\n/**\n * Disable TSLint for imports that start with an uppercase letter\n * @see https://github.com/Microsoft/tslint-microsoft-contrib/issues/387\n */\nimport Emittery from 'emittery'; // tslint:disable-line:import-name\nimport {\n  ChannelScope,\n  ChannelScopeEvents,\n  DialogProperties,\n  DialogScope,\n  DocumentProperties,\n  DocumentScope,\n  Emitter,\n  EventHandler,\n  FieldScope,\n  PageProperties,\n  PageScope,\n  PageScopeEvents,\n  UiProperties,\n  UiScope,\n  UiStyling,\n} from './api';\nimport { Parent, ParentConnection, ParentMethod } from './parent';\n\ntype Height = 'initial' | number;\n\nconst SCOPE_CHANNEL = 'channel';\nconst SCOPE_PAGE = `${SCOPE_CHANNEL}.page`;\nconst SCOPE_DOCUMENT = 'document';\nconst SCOPE_FIELD = `${SCOPE_DOCUMENT}.field`;\n\n// Symbols are unique and not listed in object keys so we can hide private methods.\nconst PARENT = Symbol('parent');\nconst EVENT_EMITTER = Symbol('eventEmitter');\nconst EVENT_SCOPE = Symbol('eventScope');\nconst FIELD_DOM_OBSERVER = Symbol('fieldDomObserver');\nconst FIELD_OVERFLOW_STYLE = Symbol('fieldOverflowStyle');\nconst FIELD_HEIGHT = Symbol('fieldHeight');\nconst FIELD_HEIGHT_MODE = Symbol('fieldHeightMode');\nconst FIELD_HEIGHT_LISTENER = Symbol('fieldHeightListener');\nconst KEY_ESCAPE = 27;\n\nfunction defineLazyGetter<T extends object, K extends keyof T>(object: T, property: K, getter: Callable<T[K]>) {\n  let value: T[K];\n\n  Object.defineProperty(object, property, {\n    get: () => {\n      if (value === undefined) {\n        value = getter();\n      }\n\n      return value;\n    },\n    configurable: false,\n    enumerable: true,\n  });\n}\n\nabstract class Scope<T extends Parent = Parent> {\n  protected [PARENT]: ParentConnection<T>;\n\n  constructor(parent: ParentConnection<T>) {\n    this[PARENT] = parent;\n  }\n}\n\nabstract class ScopeEmitter<Events, T extends Parent> extends Scope<T> implements Emitter<Events> {\n  private [EVENT_EMITTER]: Emittery;\n  private [EVENT_SCOPE]: string;\n\n  constructor(parent: ParentConnection, eventEmitter: Emittery, eventScope: string) {\n    super(parent);\n\n    this[EVENT_EMITTER] = eventEmitter;\n    this[EVENT_SCOPE] = eventScope;\n  }\n\n  on(eventName: keyof Events, callback: EventHandler<Events>) {\n    return this[EVENT_EMITTER].on(`${this[EVENT_SCOPE]}.${eventName}`, callback);\n  }\n}\n\ninterface UiParent extends Parent {\n  getProperties: ParentMethod<UiProperties>;\n  emitEvent: ParentMethod<void, [string]>;\n}\n\ninterface ChannelParent extends UiParent {\n  getPage: ParentMethod<PageProperties>;\n  refreshChannel: ParentMethod;\n  refreshPage: ParentMethod;\n}\n\ninterface DocumentParent extends UiParent {\n  getDocument: ParentMethod<DocumentProperties>;\n  getFieldValue: ParentMethod<string>;\n  getFieldCompareValue: ParentMethod<string>;\n  setFieldValue: ParentMethod<void, [string]>;\n  setFieldHeight: ParentMethod<void, [Height]>;\n}\n\ninterface DialogParent extends UiParent {\n  cancelDialog: ParentMethod<void>;\n  closeDialog: ParentMethod<void, [any]>;\n  getDialogOptions: ParentMethod<DialogProperties>;\n  openDialog: ParentMethod<void, [DialogProperties]>;\n}\n\nclass Page extends ScopeEmitter<PageScopeEvents, ChannelParent> implements PageScope {\n  get() {\n    return this[PARENT].call('getPage');\n  }\n\n  refresh() {\n    return this[PARENT].call('refreshPage');\n  }\n}\n\nclass Channel extends ScopeEmitter<ChannelScopeEvents, ChannelParent> implements ChannelScope {\n  page: Page;\n\n  constructor(parent: ParentConnection, eventEmitter: Emittery, eventScope: string) {\n    super(parent, eventEmitter, eventScope);\n\n    defineLazyGetter(this, 'page', () => new Page(parent, eventEmitter, SCOPE_PAGE));\n  }\n\n  refresh() {\n    return this[PARENT].call('refreshChannel');\n  }\n}\n\nclass Document extends Scope<DocumentParent> implements DocumentScope {\n  field: Field;\n\n  constructor(parent: ParentConnection<DocumentParent>) {\n    super(parent);\n\n    defineLazyGetter(this, 'field', () => new Field(this[PARENT]));\n  }\n\n  get(): Promise<DocumentProperties> {\n    return this[PARENT].call('getDocument');\n  }\n}\n\nfunction enableAutoHeight(this: Field) {\n  if (this[FIELD_HEIGHT_MODE] === 'auto') {\n    return;\n  }\n\n  document.body.addEventListener('load', this[FIELD_HEIGHT_LISTENER], true);\n  this[FIELD_DOM_OBSERVER].observe(document.body, {\n    attributes: true,\n    characterData: true,\n    childList: true,\n    subtree: true,\n  });\n\n  this[FIELD_HEIGHT_MODE] = 'auto';\n  this[FIELD_OVERFLOW_STYLE] = document.body.style.overflowY;\n  document.body.style.overflowY = 'hidden';\n}\n\nfunction disableAutoHeight(this: Field) {\n  if (this[FIELD_HEIGHT_MODE] !== 'auto') {\n    return;\n  }\n\n  document.body.removeEventListener('load', this[FIELD_HEIGHT_LISTENER], true);\n  this[FIELD_DOM_OBSERVER].disconnect();\n\n  this[FIELD_HEIGHT_MODE] = 'manual';\n  document.body.style.overflowY = this[FIELD_OVERFLOW_STYLE];\n}\n\nfunction updateHeight(this: Field, height: Height) {\n  // cache the field height to avoid unnecessary method calls\n  if (this[FIELD_HEIGHT] === height) {\n    return;\n  }\n\n  this[FIELD_HEIGHT] = height;\n\n  return this[PARENT].call('setFieldHeight', height);\n}\n\nclass Field extends Scope<DocumentParent> implements FieldScope {\n  private [FIELD_HEIGHT]: Height;\n  private [FIELD_HEIGHT_MODE]: 'auto' | 'manual' = 'manual';\n  private [FIELD_HEIGHT_LISTENER] = () => updateHeight.call(this, document.body.scrollHeight);\n  private [FIELD_DOM_OBSERVER] = new MutationObserver(this[FIELD_HEIGHT_LISTENER]);\n\n  constructor(parent: ParentConnection<DocumentParent>) {\n    super(parent);\n\n    window.addEventListener('focus', () => parent.call('emitEvent', `${SCOPE_FIELD}.focus`));\n    window.addEventListener('blur', () => parent.call('emitEvent', `${SCOPE_FIELD}.blur`));\n  }\n\n  getValue() {\n    return this[PARENT].call('getFieldValue');\n  }\n\n  getCompareValue(): Promise<string> {\n    return this[PARENT].call('getFieldCompareValue');\n  }\n\n  setValue(value: string) {\n    return this[PARENT].call('setFieldValue', value);\n  }\n\n  setHeight(height: 'auto' | Height): Promise<void> {\n    if (height === 'auto') {\n      return enableAutoHeight.call(this) || Promise.resolve();\n    }\n\n    disableAutoHeight.call(this);\n\n    return updateHeight.call(this, height) || Promise.resolve();\n  }\n}\n\nclass Dialog extends Scope<DialogParent> implements DialogScope {\n  constructor(parent: ParentConnection<DialogParent>) {\n    super(parent);\n\n    window.addEventListener('keydown', ({ which }) => which === KEY_ESCAPE && this.cancel());\n  }\n\n  cancel() {\n    return this[PARENT].call('cancelDialog');\n  }\n\n  close(value: any) {\n    return this[PARENT].call('closeDialog', value);\n  }\n\n  open(options: DialogProperties) {\n    return this[PARENT].call('openDialog', options);\n  }\n\n  options() {\n    return this[PARENT].call('getDialogOptions');\n  }\n}\n\nexport class Ui extends Scope implements UiScope {\n  baseUrl: string;\n  channel: ChannelScope;\n  dialog: DialogScope;\n  document: DocumentScope;\n  extension: {\n    config: string,\n  };\n  locale: string;\n  timeZone: string;\n  user: {\n    id: string,\n    firstName: string,\n    lastName: string,\n    displayName: string,\n  };\n  styling: UiStyling;\n  version: string;\n\n  constructor(parent: ParentConnection, eventEmitter: Emittery) {\n    super(parent);\n\n    defineLazyGetter(this, 'channel', () => new Channel(parent, eventEmitter, SCOPE_CHANNEL));\n    defineLazyGetter(this, 'dialog', () => new Dialog(parent));\n    defineLazyGetter(this, 'document', () => new Document(parent));\n  }\n\n  init(): Promise<Ui> {\n    return this[PARENT].call('getProperties')\n      .then(properties => Object.assign(this, properties));\n  }\n}\n","/*\n * Copyright 2018-2019 Hippo B.V. (http://www.onehippo.com)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Main entry point of the ui-extension library. Implements the public API defined in the\n * api module and communicates with the parent frame using the parent module.\n * @module ui-extension\n * @see module:api\n * @see module:parent\n */\n\n/**\n * Disable TSLint for imports that start with an uppercase letter\n * @see https://github.com/Microsoft/tslint-microsoft-contrib/issues/387\n */\nimport Emittery from 'emittery';  // tslint:disable-line:import-name\nimport { UiScope } from './api';\nimport { connect } from './parent';\nimport { Ui } from './ui';\n\nexport * from './api';\n\n/**\n * Main entry point of the ui-extension library.\n */\nexport default class UiExtension {\n  /**\n   * Registers a UI extension with the CMS.\n   *\n   * @returns A promise that resolves with a [[UiScope]] when the extension has been registered successfully.\n   * The promise rejects with a [[UiExtensionError]] when registration failed.\n   */\n  static register(): Promise<UiScope> {\n    const parentOrigin = new URLSearchParams(window.location.search).get('br.parentOrigin');\n    const eventEmitter = new Emittery();\n\n    return connect(parentOrigin, eventEmitter)\n      .then(parentConnection => new Ui(parentConnection, eventEmitter).init());\n  }\n}\n\n/**\n * Enable UiExtension.register() in ui-extension.min.js\n * @hidden don't include in the generated documentation since it duplicates UiExtension.register()\n */\nexport const register = UiExtension.register;\n"],"names":["pact","e","value","s","state","o","v","onRejected","result","anyMap","WeakMap","eventsMap","resolvedPromise","Promise","resolve","assertEventName","eventName","TypeError","assertListener","listener","getListeners","instance","events","get","has","set","Set","Emittery","constructor","this","Map","on","add","off","bind","delete","once","data","emit","eventData","listeners","anyListeners","staticListeners","staticAnyListeners","all","map","emitSerial","onAny","offAny","clearListeners","clear","values","listenerCount","size","count","Typed","Object","defineProperty","enumerable","undefined","UiExtensionErrorCode","UiStyling","DocumentEditorMode","DialogSize","exports","id","DEFAULT_PORTS","URL_REGEX","Penpal","ERR_CONNECTION_DESTROYED","ERR_CONNECTION_TIMEOUT","ERR_NOT_IN_IFRAME","ERR_IFRAME_ALREADY_ATTACHED_TO_DOM","window","debug","generateId","log","_console","_len","arguments","length","args","Array","_key","console","apply","concat","DestructionPromise","executor","handlers","forEach","handler","then","push","serializeError","_ref","name","message","stack","connectCallSender","callSender","info","methodNames","destroy","destructionPromise","localName","local","remote","remoteOrigin","destroyed","createMethodProxy","methodName","_len2","_key2","closed","error","Error","code","reject","addEventListener","handleMessageEvent","event","source","origin","penpal","removeEventListener","returnValue","returnValueIsError","obj","deserializedError","keys","key","resolution","postMessage","reduce","api","connectCallReceiver","methods","_event$data","createPromiseHandler","err","connectToChild","_ref2","url","appendTo","iframe","_ref2$methods","timeout","parentNode","connectionDestructionPromise","resolveConnectionDestructionPromise","parent","document","createElement","src","childOrigin","protocol","hostname","port","location","regexResult","exec","portSuffix","getOriginFromUrl","promise","resolveConnectionPromise","connectionTimeoutId","setTimeout","receiverMethodNames","destroyCallReceiver","handleMessage","child","contentWindow","callReceiverDestructionPromise","resolveCallReceiverDestructionPromise","receiverMethodName","clearTimeout","body","appendChild","checkIframeInDocIntervalId","setInterval","contains","clearInterval","removeChild","connectToParent","_ref3","_ref3$parentOrigin","parentOrigin","_ref3$methods","top","_default","ParentError","setPrototypeOf","prototype","toPromise","errorCode","convertPenpalErrorCode","NotInIframe","ConnectionDestroyed","DialogCanceled","DialogExists","InternalError","ParentConnection","_parent","call","method","IncompatibleParent","catch","convertPenpalError","fromPenpal","SCOPE_CHANNEL","SCOPE_PAGE","SCOPE_FIELD","PARENT","Symbol","EVENT_EMITTER","EVENT_SCOPE","FIELD_DOM_OBSERVER","FIELD_OVERFLOW_STYLE","FIELD_HEIGHT","FIELD_HEIGHT_MODE","FIELD_HEIGHT_LISTENER","KEY_ESCAPE","defineLazyGetter","object","property","getter","configurable","Scope","ScopeEmitter","eventEmitter","eventScope","callback","Page","refresh","Channel","Document","Field","updateHeight","height","scrollHeight","MutationObserver","getValue","getCompareValue","setValue","setHeight","observe","attributes","characterData","childList","subtree","style","overflowY","disconnect","Dialog","which","cancel","close","open","options","Ui","init","properties","_extends","UiExtension","URLSearchParams","search","emitEvent","penpalError","connect","parentConnection","register"],"mappings":"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"}